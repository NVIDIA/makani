base_config: &BASE_CONFIG

    # metadata file for the dataset
    metadata_json_path: "/metadata/data.json"

    # data
    train_data_path: "/train"
    valid_data_path: "/test"
    exp_dir: "/runs"
    n_years: 37
    img_shape_x: 721
    img_shape_y: 1440

    # files used for normalization of the data
    min_path: "/stats/mins.npy"
    max_path: "/stats/maxs.npy"
    time_means_path: "/stats/time_means.npy"
    global_means_path: "/stats/global_means.npy"
    global_stds_path: "/stats/global_stds.npy"
    time_diff_means_path: "/stats/time_diff_means.npy"
    time_diff_stds_path: "/stats/time_diff_stds.npy"

    # architecture related
    nettype: "Pangu"
    model_grid_type: "equiangular"
    num_surface: 4
    num_atmospheric: 5
    num_levels: 13
    embed_dim: 96
    patch_size: !!python/tuple [2,4,4]
    depth_layers: !!python/tuple [2,6,6,2]
    num_heads: !!python/tuple [6,12,12,6]

    # training parameters
    losses:
    -   type: "squared geometric l2"
        channel_weights: "auto"
        temp_diff_normalization: !!bool True

    lr: 5E-4
    n_eval_samples: 1460
    max_epochs: 100
    batch_size: 1
    weight_decay: 3E-6
    amp_mode: "fp16"
    drop_path_rate: 0.2
    disable_ddp: !!bool False

    # scheduler parameters
    scheduler: "CosineAnnealingLR" # "ReduceLROnPlateau" or "CosineAnnealingLR"
    scheduler_T_max: 100
    scheduler_min_lr: 0.0
    lr_warmup_steps: 0

    # general
    verbose: !!bool False

    # wireup stuff
    wireup_info: "mpi"
    wireup_store: "tcp"

    num_data_workers: 2
    num_visualization_workers: 2
    dt: 1 # how many timesteps ahead the model will predict
    n_history: 0 # how many previous timesteps to consider
    prediction_type: "iterative"
    valid_autoreg_steps: 0 # number of autoregressive steps for validation, 20 steps in total

    # we make the "epochs" shorter so we have more reporting
    n_train_samples_per_epoch: 54000

    ics_type: "specify_number"
    save_raw_forecasts: !!bool True
    save_channel: !!bool False
    masked_acc: !!bool False
    maskpath: None
    perturb: !!bool False
    add_noise: !!bool False
    noise_std: 0.

    target: "default" # options default, residual
    normalize_residual: !!bool False

    # define channels to be read from data
    channel_names: ["u10m", "v10m", "t2m", "msl", "u50", "u100", "u150", "u200", "u250", "u300", "u400", "u500", "u600", "u700", "u850", "u925", "u1000", "v50", "v100", "v150", "v200", "v250", "v300", "v400", "v500", "v600", "v700", "v850", "v925", "v1000", "z50", "z100", "z150", "z200", "z250", "z300", "z400", "z500", "z600", "z700", "z850", "z925", "z1000", "t50", "t100", "t150", "t200", "t250", "t300", "t400", "t500", "t600", "t700", "t850", "t925", "t1000", "q50", "q100", "q150", "q200", "q250", "q300", "q400", "q500", "q600", "q700", "q850", "q925", "q1000"]
    normalization: "zscore" # options zscore or minmax or none

    # extra channels
    add_grid: !!bool False
    add_zenith: !!bool True
    # invariants
    add_orography: !!bool True
    orography_path: /invariants/orography.nc
    add_landmask: !!bool True
    landmask_path: /invariants/land_sea_mask.nc

    pretrained: !!bool False

    # logging options
    log_to_screen: !!bool True
    log_to_wandb: !!bool True
    log_video: 20 # if > 0 will log every i-th epoch
    save_checkpoint: "legacy"

    optimizer_type: "Adam"
    optimizer_beta1: 0.9
    optimizer_beta2: 0.999
    crop_size_x: None
    crop_size_y: None

    # required for validation and scoring
    inf_data_path: "/out_of_sample"

    # Weights and biases configuration
    wandb_name: None
    wandb_group: "pangu"
    wandb_project: "pangu_development"
    wandb_entity: "your_wandb_entity"

###########################################################################################################################
# 69 channels Baseline
###########################################################################################################################

# 1 GPUS, h=1, no cuda graphs
base_69ch: &BASELINE_69CH
    <<: *BASE_CONFIG

base_onnx: &BASE_ONNX
    <<: *BASE_CONFIG

    # ONNX wrapper related overwrite
    nettype: "/makani/makani/makani/models/networks/pangu_onnx.py:PanguOnnx"
    onnx_file: '/model/pangu_weather_6.onnx'
    
    amp_mode: "none"
    disable_ddp: True
    
    # Set Pangu ONNX channel order
    channel_names: ["msl", "u10m", "v10m", "t2m", "z1000", "z925", "z850", "z700", "z600", "z500", "z400", "z300", "z250", "z200", "z150", "z100", "z50", "q1000", "q925", "q850", "q700", "q600", "q500", "q400", "q300", "q250", "q200", "q150", "q100", "q50", "t1000", "t925", "t850", "t700", "t600", "t500", "t400", "t300", "t250", "t200", "t150", "t100", "t50", "u1000", "u925", "u850", "u700", "u600", "u500", "u400", "u300", "u250", "u200", "u150", "u100", "u50", "v1000", "v925", "v850", "v700", "v600", "v500", "v400", "v300", "v250", "v200", "v150", "v100", "v50"]
    # Remove input/output normalization
    normalization: "none"

